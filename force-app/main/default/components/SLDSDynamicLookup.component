<apex:component controller="SLDSDynamicLookupController">
    <style>
        
        #search-text-info:hover{
            background-color: white;
        }
        
        .slds-pill__label {
            color: rgb(22, 50, 92);
        }
    </style>
    <!-- attributes -->
    <apex:attribute name="SLDSResourceName" description="Attribute in which ame of static resource to be passed" required="true" type="String"/>
    <apex:attribute name="LabelName" description="Attribute to display label along with look up field to distinguish fields" required="true" type="String" assignTo="{!label}"/>
    <apex:attribute name="ObjectApiName" description="Api name of component on which search should happen" required="true" type="String" assignTo="{!objectName}"/>
    <apex:attribute name="DisplayFieldApiNames" description="Attribute to get fields Api Name whose value needs to be displayed while searching.These are seperated by comma.For example : 'firstname,lastname'" required="true" type="String"/>
    <apex:attribute name="DisplayFieldsPattern" description="Attribute to get pattern to display value.You can combine two fields with pattern. For example : 'firstname - lastname'" type="String"/>
    <apex:attribute name="Photo" description="Attribute that will tell if photo needs to be added to records while searching. For fields to be used, pattern should be 'field->fieldAPiName'. For url, pattern should be 'url->pathofimage'" type="String"/>
    <apex:attribute name="SetValueToField" description="Attribute that will tell where to put selected value" required="true" type="String"/>
    <apex:attribute name="JSfunction" description="Allows to pass javascript function to execute when a value is selected in the lookup. This function will receive the selected id as parameter and the mainRecordId" type="String"/>
    <apex:attribute name="PlaceholderText" description="Allow placeholder text customization." type="String" assignTo="{!placeHolder}"/>
    <apex:attribute name="AdditionalWHEREFilter" description="Accepts additional filter in the SOQL query." type="String"/>
    <apex:attribute name="OnKeyDown" description="Allows to pass javascript function to execute when a user press a key." type="String"/>
    <apex:attribute name="showSpinner" description="Allows to show a spinner after selection" type="Boolean"/>
    <apex:attribute name="recordId" description="Record Id. Used to return to the JSFunction as a parameter" type="String"/>
    <!-- body-->
    <div id="{!uniqueComponentId}">
        <apex:inputHidden value="{!SetValueToField}" html-data-id="set{!uniqueComponentId}Id"/>
        
        <div class="slds-lookup" data-select="single" data-scope="single" data-typeahead="true">
            <div class="slds-form-element">
                <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right">

                    <!-- section to display selected record-->
                    <div class="slds-pill_container slds-show" style="display:none;" id="selected-record">
                        <a class="slds-pill" style="width:100%; text-decoration: none;">
                        <span class="slds-pill__label" id="selected-name"><img src=""  class="slds-icon slds-icon-standard-account slds-pill__icon" id="select-image"/></span>
                        <button type="button" class="slds-button slds-button--icon-bare slds-pill__remove" onclick="removeRecord('{!uniqueComponentId}', '{!JSfunction}', {!showSpinner}, '{!recordId}')">
                            <apex:image url="{!URLFOR(SLDSResourceName, '/assets/icons/utility/close_60.png')}"  styleclass="slds-button__icon"/>
                            <span class="slds-assistive-text">Remove</span>
                        </button>
                        </a>
                    </div>

                    <!-- section to display input field for search-->
                    <div id="input-text" style="display:block;">
                        <apex:image url="{!URLFOR(SLDSResourceName, '/assets/icons/utility/search_60.png')}"  styleclass="slds-input__icon slds-icon-text-default"/>
                        <input id="lookup" class="slds-input" type="text" autocomplete="off" aria-autocomplete="list" role="combobox" aria-expanded="true" aria-activedescendant=""
                        onkeyup='keyPressedOnLookup("{!uniqueComponentId}","{!ObjectApiName}", "{!DisplayFieldApiNames}", "{!DisplayFieldsPattern}","{!Photo}","{!objectLabelPlural}", "{!$RemoteAction.SLDSDynamicLookupController.search}", "{!JSfunction}", "{!AdditionalWHEREFilter}", {!showSpinner}, "{!recordId}")'
                               onkeydown="{!OnKeyDown}" placeholder="{!IF(ISBLANK(placeHolder), 'Search ' + objectLabelPlural, placeHolder)}"/>
                    </div>
                </div>
            </div>
            
            <!-- section to display searched results-->
            <div class="slds-lookup__menu" role="listbox" id="list-box" style="display: none">
                <div class="slds-lookup__item">
                    <apex:image url="{!URLFOR(SLDSResourceName, '/assets/icons/utility/search_60.png')}" styleClass="slds-icon slds-icon-text-default slds-icon--small" width="20px" height="20px" style="margin-left:5px;"/>
                    <span id="search-text-info" style="display:inline; user-select: none;"></span>
                </div>
                <ul class="slds-lookup__list" role="presentation" id="record-list"></ul>
            </div>
        </div>
    </div>
    
    <script>

        if('{!SetValueToField}' != null && '{!SetValueToField}' != ''){
            onload('{!uniqueComponentId}','{!ObjectApiName}', '{!DisplayFieldApiNames}', '{!DisplayFieldsPattern}','{!Photo}','{!objectLabelPlural}', '{!$RemoteAction.SLDSDynamicLookupController.search}', '{!SetValueToField}', "{!AdditionalWHEREFilter}", "{!recordId}");
        }
        
        function onload(componentId, objectName, fieldNames, fieldsPattern, photo, objectPluralName, remoteMethod, recordId, additionalFilter, masterRecordId){
            var selector = '#'+componentId;
            //showLoader(componentId);
            var searchText = document.querySelector(selector+" #lookup");
            Visualforce.remoting.Manager.invokeAction(remoteMethod,
                    objectName, fieldNames, fieldsPattern, photo, searchText.value, recordId, '', additionalFilter,
                function(result, event){
                    if (event.status) {
                        for(var i = 0; i < result.length; i++){
                            var record = result[i];
                            if(recordId == record.recordId){
                                select(componentId, record.displayValue, record.photoUrl, record.recordId, '', objectName.toLowerCase(), false, masterRecordId);
                                return false;
                                break;
                            }
                        }
                    } else if (event.type === 'exception') {
                            console.log(event.message);
                            console.log(event.where);
                    } else {
                         console.log(event.message);
                    }
                }, 
                {escape: true}
            );
            return false;
        }
        
    </script>
</apex:component>